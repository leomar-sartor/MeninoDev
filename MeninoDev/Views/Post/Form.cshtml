@model MeninoDev.Entidades.Post

@{
    ViewData["Title"] = "Novo";
}

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Form", "Post", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="row">
                <div class="col-6 ">
                    @Html.ActionLink("Voltar", "Index", "Post", null, new { @class = "btn btn-sm btn-outline-primary" })
                </div>
                <div class="col-6 text-end">
                    <input type="submit" value="Salvar" class="btn btn-sm btn-outline-success" />
                </div>
            </div>

            <hr />

            <div class="mb-3 row">
                <label class="col-sm-1 col-form-label"> @Html.DisplayNameFor(model => model.Title) </label>
                <div class="col-sm-11">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @name = "title", @id = "title", @placeholder = "Título", @type = "text" } })
                    <small>
                        @Html.ValidationMessageFor(model => model.Title, null, new { @class = "text-danger" })
                    </small>
                </div>
            </div>

            <div class="mb-3 row">
                <label class="col-sm-1 col-form-label"> @Html.DisplayNameFor(model => model.Descricao) </label>
                <div class="col-sm-11">
                    @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control", @name = "title", @id = "title", @placeholder = "Título", @type = "text" } })
                    <small>
                        @Html.ValidationMessageFor(model => model.Descricao, null, new { @class = "text-danger" })
                    </small>
                </div>
            </div>

            <div class="mb-3 row">
                <label class="col-sm-1 col-form-label"> @Html.DisplayNameFor(model => model.CategoriaId) </label>
                <div class="col-sm-11">
                    <select asp-for="CategoriaId" class="form-select" asp-items="ViewBag.Categorias">
                    </select>
                    <small>
                        @Html.ValidationMessageFor(model => model.CategoriaId, null, new { @class = "text-danger" })
                    </small>
                </div>
            </div>

            <div class="mb-3 row">
                <label class="col-sm-1 col-form-label"> @Html.DisplayNameFor(model => model.Url) </label>
                <div class="col-sm-11">
                    @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control", @name = "title", @id = "title", @placeholder = "Endereço da Imagem", @type = "text" } })
                    <small>
                        @Html.ValidationMessageFor(model => model.Url, null, new { @class = "text-danger" })
                    </small>
                </div>
            </div>

            <div class="form-group">
                @Html.TextAreaFor(m => m.Content, new { rows = "40", style = "resize:none;width:100%;", placeholder = Html.DisplayNameFor(m => m.Content), @class = "form-control input-lg textarea-editor" })
            </div>
        }
    </div>
</div>

@*https://summernote.org/getting-started/#simple-example*@
@section Scripts
{
<script type="text/javascript">
    $(document).ready(function() {

        console.log("Carregou");
        

            tinymce.init({
                selector: '#Content',
                relative_urls: false,
                plugins: 'ai tinycomments mentions anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed permanentpen footnotes advtemplate advtable advcode editimage tableofcontents mergetags powerpaste tinymcespellchecker autocorrect a11ychecker typography inlinecss',
                toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | align lineheight | tinycomments | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
                tinycomments_mode: 'embedded',
                tinycomments_author: 'Author name',
                emoticons_database: 'emojiimages',
                emoticons_images_url: 'http://my.server/images/emoticons/',
                mergetags_list: [
                    { value: 'First.Name', title: 'First Name' },
                    { value: 'Email', title: 'Email' },
                ],
                ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
            });

        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });

    });
</script>
}